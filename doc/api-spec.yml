openapi: "3.0.1"
info:
  title: "perish-alpha"
  version: "1"
servers:
- url: "https://hgembpmlo6.execute-api.us-east-1.amazonaws.com/{basePath}"
  variables:
    basePath:
      default: v1
paths:
  /unit/{id}:
    get:
      tags:
      - unit
      summary: get a single unit by its unique id
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful single unit request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unit"
        400:
          description: Failed single unit request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"

      security:
      - api_key: []

  /unit/search:
    get:
      tags:
      - unit
      description: find units that meet the optional search filter criteria. omitting all filters will return all units that exist in your orginization
      parameters:
      - name: expire
        description: full-date notation as defined by RFC 3339, section 5.6, for example, 2017-07-21
        in: query
        schema:
          type: string
          format: date
      - name: weight
        description: float or whole number representing the expected grams the unit(s) weigh
        in: query
        schema:
          type: number
          format: float
      - name: name
        description: string will be fuzzy matched to the name of the unit(s)
        in: query
        schema:
          type: string
      - name: desc
        description: string will be fuzzy matched to the description of the unit(s)
        in: query
        schema:
          type: string
      responses:
        200:
          description: successful units query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/unit"

      security:
      - api_key: []

  /unit/create:
    post:
      tags:
      - unit
      summary: create new unit
      description: create new perishable unit concept for later tracking and review.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/unit"
        required: true
      responses:
        200:
          description: successful create perishable unit operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/unit"
      security:
      - api_key: []

  /rule/search:
    get:
      tags:
      - rule
      summary: find validation rule names
      description: currently returns all global rules and rules belonging to your orginization
      responses:
        200:
          description: Successful rules query
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/rule"
      security:
      - api_key: []

components:
  schemas:
    unit:
      title: unit
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          maxLength: 256
          type: string
        type:
          maxLength: 256
          type: string
        creator:
          maxLength: 256
          type: string
        desc:
          type: string
        mass:
          type: number
          format: float
          description: in grams
        expire:
          type: string
          format: date
          description: expiration date
        ext:
          type: object
          description: additional custom properties

    rule:
      title: rule
      type: object
      properties:
        name:
          maxLength: 256
          type: string

    error:
      title: error
      type: object
      properties:
        message:
          type: string

  responses:
      BadRequest:
        description: The specified resource was not found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/error'
      Unauthorized:
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/error'
  securitySchemes:
    api_key:
      type: apiKey
      name: apikey
      in: header